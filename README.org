#+TITLE: Salas 2020 Analysis
#+PROPERTY: header-args :exports both :eval never-export
#+OPTIONS: H:4 num:nil toc:5
#+EXCLUDE_TAGS: noexport
#+AUTHOR: Mehmet Tekman


As per the official email, we have four deliverables:

*** DONE 1. Explain the Dot1L plots
  CLOSED: [2020-07-23 Do 15:58]

  These turned out to be a plot of cell count distributions, which was virtually unreadable before. I have since updated it to more meaningful metrics. [[file:1_plots.org][Notebook is here]].

*** DONE 2. Append CRE recombinase expression to cells
  CLOSED: [2020-07-27 Mo 15:58]

  Galaxy was used to map the cell reads against the transcriptome of the CRE transcript; two were used, one from NCBI and one from AddGene. The NCBI matrices detected CRE expression only in the K matrices, which was good. 141 cells were annotated to the metadata matrix that adrian provided. [[file:2_cre.org][Notebook is here]].

*** DONE 3. Extract Dot1L expression into a metadata table
    CLOSED: [2020-07-29 Wed 06:44]

    A small request to access the Dot1L expression in such a way that each count can be traced to a specific library and cell barcode.
    The result is two tables, one in long format and one in wide format, containing information about how many transcripts are detected in which isoform, or how many transcripts are detected in a particular exon of an isoform. [[file:3_dot1lmeta.org][Notebook is here]], and matrices are [[file:files/3_dot1lmeta/largemat/][here]].


*** DONE 4. Perform WCGNA analysis
    CLOSED: [2020-07-30 Thu 22:43]

    A WGCNA analysis was performed on the RaceID matrix, first on the highly variable genes of ~1500 genes, and then on the filtered genes of ~8000 genes. Given the size of these processed datasets, checkpoints were saved to the Galaxy History [[https://usegalaxy.eu/u/mehmet-tekman/h/adrian-salas-wgcna-tom-checkpoints][Adrian Salas WGCNA TOM Checkpoints]]. [[file:4_wgcna.ipynb][The notebook can be found here]].
    The list of genes for each of the gene modules can be found (as grouped by colour) in [[file:files/4_wgcna/][files/4_wgcna/]].
    Given the complexity of the environment setup, the environment is also saved to this history under the name =wgcna.tar.gz= which should be unpacked to =~/miniconda/envs/wgcna= and enabled with =conda activate wgcna=.

*** DONE 5. Generate HEATMAP plots

    The idea was to generate the fancy plots from Figure 7a of the [[https://www.nature.com/articles/s41598-018-21161-y#Sec25][WGCNA paper]]:

    #+CAPTION: This was generated by picking a specific sample (highlighted in red rectangle s_062) in a specific gene module (lightsteelblue1). The yellow/blue vertical on the left are the treatments of individual cells, the silhoutte plot thing I am not sure (total expression?) and then we have a heatmap of cell vs gene (with dendrogram) based on the 38 genes in the lightsteelblue1 module, and then the expression of the top 3 genes in that module are shown along with MEmagenta (?) and DUSP1.
    #+NAME: fig:fancyref
    [[files/6_checkpoints/Screenshot_2020-08-17-combi.png]]

    The original heatmap was generated with the =heatmap.2= package, which is a wrapper around the default =heatmap= package in R, but unfortunately these both draw to the image device and cannot be captured as grobs to integrate easily into other packages. I therefore went down the more familiar =ggplot2= route.

    The heatmap.2 clusters were not of great quality as can be seen [[files/6_checkpoints/heatmap2.expdata.png][here]], [[files/6_checkpoints/heatmap2.test2.png][here]], and [[files/6_checkpoints/heatmap2.test.png][here]], for the same module input data. GGplot2 gave much nicer clustering when performing the hclustering manually, as can be seen [[files/6_checkpoints/test2.svg][here]].

    The notebook for generating the plots can be found right at the bottom of [[6_nicegraphics.org][this notebook]] under the heading /Split Out Parts/.